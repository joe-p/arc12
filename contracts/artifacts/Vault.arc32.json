{
  "hints": {
    "create(address,address)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "reject(address,address,uint64,address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "optIn(uint64,pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "claim(uint64,address,address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "CALL"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "creator": {
          "type": "bytes",
          "key": "creator"
        },
        "master": {
          "type": "uint64",
          "key": "master"
        },
        "receiver": {
          "type": "bytes",
          "key": "receiver"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 2,
      "num_uints": 1
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "Vault",
    "desc": "",
    "methods": [
      {
        "name": "create",
        "args": [
          {
            "name": "receiver",
            "type": "address"
          },
          {
            "name": "sender",
            "type": "address"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "reject",
        "args": [
          {
            "name": "asaCreator",
            "type": "address"
          },
          {
            "name": "feeSink",
            "type": "address"
          },
          {
            "name": "asa",
            "type": "uint64"
          },
          {
            "name": "vaultCreator",
            "type": "address"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "optIn",
        "args": [
          {
            "name": "asa",
            "type": "uint64"
          },
          {
            "name": "mbrPayment",
            "type": "pay"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "claim",
        "args": [
          {
            "name": "asa",
            "type": "uint64"
          },
          {
            "name": "creator",
            "type": "address"
          },
          {
            "name": "asaMbrFunder",
            "type": "address"
          }
        ],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}