#pragma version 8

b main

create_vault: // create_vault(receiver, mbr_payment)
	txn OnCompletion
	int NoOp
	==
	assert

	txna Accounts 1
	store 0 // create_vault: receiver [account]

	txn GroupIndex
	int 1
	-
	store 1 // create_vault: mbr_payment [pay]

	// src_map:arc12.rb:153
	load 0 // create_vault: receiver [account]
	box_get
	swap
	pop
	!
	assert

	// src_map:arc12.rb:154
	load 1 // create_vault: mbr_payment [pay]
	gtxns Receiver
	global CurrentApplicationAddress
	==
	assert

	// src_map:arc12.rb:155
	load 1 // create_vault: mbr_payment [pay]
	gtxns Sender
	txn Sender
	==
	assert

	// src_map:arc12.rb:156
	load 1 // create_vault: mbr_payment [pay]
	gtxns CloseRemainderTo
	global ZeroAddress
	==
	assert

	// src_map:arc12.rb:158
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	pop
	store 2 // pre_create_mbr

	// src_map:arc12.rb:160
	// Create vault
	// src_map:arc12.rb:161
	itxn_begin

	// src_map:arc12.rb:162
	int appl
	itxn_field TypeEnum

	// src_map:arc12.rb:163
	int 0
	itxn_field ApplicationID

	// src_map:arc12.rb:164
	byte b64 CCAEAAEEBSYHB2NyZWF0b3IIcmVjZWl2ZXIIMDUxOGZkMTIIM2M5NTdmZWIIMmNjZTYzZTUINmU4NjA4NWMIYzI5MDJjYTBCAfkxGSISRDUANAAoZBJEsSOyEDQAsgcyCnMBSLIIIrIBMQCyCbMxFiMINQE0ATgYcghIMgkSRDQBOBklEkSJMRkiEkQxGCISRDYcATUCNhwCNQMoNANnKTQCZ4kxGSISRDYcATUENhwCNQU2MAA1BjYcAzUHMQApZBJENAWAIMf8zbJY8NQYnCv4ttaO5pdQhkKwrQAfMfy5GMNUuoWaEkQyCnMBSDUIMgpzAEg1CbEkshA0BLIUNAayETQEshWzNAkyCnMASAk1CjQIMgpzAUgJNQuxI7IQNAWyBzQLgQI0CgsJsgizMgpzCUgjEkEABTQHiP8MiTEZIhJENhwBNQw2MAA1DTEWIwk1DjQNFjUPNA++TEgURDQOOAA0DBJENA44BzIKEkQyCnMBSDUINA+BILk0DzQMv7EkshAyCrIUIrISIrIBNA2yEbM0DjgIMgpzAUg0CAkSRIkxGSUSRDIKcwBIIhJEMQAyCRJEiTEZIhJENjAANRA2HAE1ETYcAjUSNhwDNRM0EBY1DzQPvkxIRDQTNA++SBJENBEpZBJENBIoZBJEMQA0ERJEMgpzAUg1FDQPvLEkshA0EbIUIrIBMQA0EHAATEiyEjQQshE0EbIVs7EjshA0E7IHMgpzAUg0FAmyCCKyAbMyCnMJSCMSQQAFNBKI/giJIsAaKhJBAAWI/jkjQyLAGisSQQAFiP5JI0MiwBonBBJBAAWI/tYjQyLAGicFEkEABYj/LCNDIsAaJwYSQQAFiP8yI0MiwBoqEkEABYj99SNDIsAaKxJBAAWI/gUjQyLAGicEEkEABYj+kiNDIsAaJwUSQQAFiP7oI0MiwBonBhJBAAWI/u4jQw==
	itxn_field ApprovalProgram

	// src_map:arc12.rb:165
	int NoOp
	itxn_field OnCompletion

	// src_map:arc12.rb:166
	load 0 // create_vault: receiver [account]
	itxn_field Accounts

	// src_map:arc12.rb:167
	txn Sender
	itxn_field Accounts

	// src_map:arc12.rb:168
	int 0
	itxn_field Fee

	// src_map:arc12.rb:170
	itxn_submit

	// src_map:arc12.rb:172
	// Fund vault with account MBR
	// src_map:arc12.rb:173
	itxn_begin

	// src_map:arc12.rb:174
	int pay
	itxn_field TypeEnum

	// src_map:arc12.rb:175
	txn CreatedApplicationID
	app_params_get AppAddress
	pop
	itxn_field Receiver

	// src_map:arc12.rb:176
	global MinBalance
	itxn_field Amount

	// src_map:arc12.rb:177
	int 0
	itxn_field Fee

	// src_map:arc12.rb:178
	itxn_submit

	// src_map:arc12.rb:180
	load 0 // create_vault: receiver [account]
	int 32
	box_create

	// src_map:arc12.rb:181
	load 0 // create_vault: receiver [account]
	txn CreatedApplicationID
	itob
	box_put

	// src_map:arc12.rb:183
	load 1 // create_vault: mbr_payment [pay]
	gtxns Amount
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	pop
	load 2 // pre_create_mbr
	-
	global MinBalance
	+
	==
	assert

	// src_map:arc12.rb:185
	txn CreatedApplicationID
	itob
	byte "151f7c75"
	concat
	log

	// src_map:arc12.rb:186
	retsub

verify_axfer: // verify_axfer(receiver, vault_axfer)
	txn OnCompletion
	int NoOp
	==
	assert

	txna Accounts 1
	store 3 // verify_axfer: receiver [account]

	txn GroupIndex
	int 1
	-
	store 4 // verify_axfer: vault_axfer [axfer]

	// src_map:arc12.rb:192
	load 3 // verify_axfer: receiver [account]
	box_get
	swap
	pop
	assert

	// src_map:arc12.rb:193
	load 4 // verify_axfer: vault_axfer [axfer]
	gtxns Receiver
	load 3 // verify_axfer: receiver [account]
	box_get
	pop
	==
	assert

	// src_map:arc12.rb:194
	load 4 // verify_axfer: vault_axfer [axfer]
	gtxns CloseRemainderTo
	global ZeroAddress
	==
	assert

	// src_map:arc12.rb:195
	retsub

get_vault_id: // get_vault_id(receiver)
	txn OnCompletion
	int NoOp
	==
	assert

	txna Accounts 1
	store 5 // get_vault_id: receiver [account]

	// src_map:arc12.rb:201
	load 5 // get_vault_id: receiver [account]
	box_get
	swap
	pop
	assert

	// src_map:arc12.rb:202
	load 5 // get_vault_id: receiver [account]
	box_get
	pop
	byte "151f7c75"
	concat
	log

	// src_map:arc12.rb:203
	retsub

get_vault_addr: // get_vault_addr(receiver)
	txn OnCompletion
	int NoOp
	==
	assert

	txna Accounts 1
	store 6 // get_vault_addr: receiver [account]

	// src_map:arc12.rb:209
	load 6 // get_vault_addr: receiver [account]
	box_get
	swap
	pop
	assert

	// src_map:arc12.rb:210
	load 6 // get_vault_addr: receiver [account]
	box_get
	pop
	btoi
	app_params_get AppAddress
	pop
	byte "151f7c75"
	concat
	log

	// src_map:arc12.rb:211
	retsub

delete_vault: // delete_vault(receiver, vault, creator)
	txn OnCompletion
	int NoOp
	==
	assert

	txna Accounts 1
	store 7 // delete_vault: receiver [account]

	txna Applications 0
	store 8 // delete_vault: vault [application]

	txna Accounts 2
	store 9 // delete_vault: creator [account]

	// src_map:arc12.rb:218
	load 7 // delete_vault: receiver [account]
	box_get
	swap
	pop
	assert

	// src_map:arc12.rb:219
	load 8 // delete_vault: vault [application]
	load 7 // delete_vault: receiver [account]
	box_get
	pop
	btoi
	==
	assert

	// src_map:arc12.rb:220
	load 8 // delete_vault: vault [application]
	byte "creator"
	app_global_get_ex
	pop
	store 10 // vault_creator

	// src_map:arc12.rb:221
	load 10 // vault_creator
	load 9 // delete_vault: creator [account]
	==
	assert

	// src_map:arc12.rb:223
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	pop
	store 11 // pre_delete_mbr

	// src_map:arc12.rb:225
	// Delete vault
	// src_map:arc12.rb:226
	itxn_begin

	// src_map:arc12.rb:227
	int appl
	itxn_field TypeEnum

	// src_map:arc12.rb:228
	load 7 // delete_vault: receiver [account]
	box_get
	pop
	btoi
	itxn_field ApplicationID

	// src_map:arc12.rb:229
	int DeleteApplication
	itxn_field OnCompletion

	// src_map:arc12.rb:230
	int 0
	itxn_field Fee

	// src_map:arc12.rb:231
	itxn_submit

	// src_map:arc12.rb:233
	// Send vault MBR to creator
	// src_map:arc12.rb:234
	itxn_begin

	// src_map:arc12.rb:235
	int pay
	itxn_field TypeEnum

	// src_map:arc12.rb:236
	load 10 // vault_creator
	itxn_field Receiver

	// src_map:arc12.rb:237
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	pop
	load 11 // pre_delete_mbr
	-
	itxn_field Amount

	// src_map:arc12.rb:238
	int 0
	itxn_field Fee

	// src_map:arc12.rb:239
	itxn_submit

	// src_map:arc12.rb:240
	retsub

main:
	int 0
	txnas ApplicationArgs
	byte "dc4a2cde"
	==
	bz abi_routing0

	callsub create_vault

	int 1
	return

abi_routing0:
	int 0
	txnas ApplicationArgs
	byte "e99f0c84"
	==
	bz abi_routing1

	callsub verify_axfer

	int 1
	return

abi_routing1:
	int 0
	txnas ApplicationArgs
	byte "ef7d7c77"
	==
	bz abi_routing2

	callsub get_vault_id

	int 1
	return

abi_routing2:
	int 0
	txnas ApplicationArgs
	byte "546d3c21"
	==
	bz abi_routing3

	callsub get_vault_addr

	int 1
	return

abi_routing3:
	int 0
	txnas ApplicationArgs
	byte "9e810f4b"
	==
	bz abi_routing4

	callsub delete_vault

	int 1
	return

abi_routing4: