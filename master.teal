#pragma version 8

b main

create_vault: // create_vault(receiver, mbr_payment)
	txn OnCompletion
	int NoOp
	==
	assert

	int 1
	txnas Accounts
	store 0 // create_vault: receiver [account]

	txn GroupIndex
	int 1
	-
	store 1 // create_vault: mbr_payment [pay]

	// src_map:arc12.rb:131
	load 0 // create_vault: receiver [account]
	box_get
	swap
	pop
	!
	assert

	// src_map:arc12.rb:132
	load 1 // create_vault: mbr_payment [pay]
	gtxns Receiver
	global CurrentApplicationAddress
	==
	assert

	// src_map:arc12.rb:133
	load 1 // create_vault: mbr_payment [pay]
	gtxns Sender
	txn Sender
	==
	assert

	// src_map:arc12.rb:134
	load 1 // create_vault: mbr_payment [pay]
	gtxns CloseRemainderTo
	global ZeroAddress
	==
	assert

	// src_map:arc12.rb:136
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	pop
	store 2 // pre_create_mbr

	// src_map:arc12.rb:138
	// Create vault
	// src_map:arc12.rb:139
	itxn_begin

	// src_map:arc12.rb:140
	int appl
	itxn_field TypeEnum

	// src_map:arc12.rb:141
	int 0
	itxn_field ApplicationID

	// src_map:arc12.rb:142
	byte b64 CCAFAAECBAUmBAZhc3NldHMGbWFzdGVyB2NyZWF0b3IIcmVjZWl2ZXJCAVsxGSISRDEYIhJEI8AcNQAkwBw1ASgiZyo0AWcrNABnKTINZ4kxGSISRCPAHDUCIsAwNQMxFiMJNQQ0AxY1BTQFvkxIFEQ0BDgANAISRDQEOAcyChJEMgpzAUg1BigoZCMIZzQFgSC5NAU0Ar+xJbIQMgqyFCKyEiKyATQDshGzNAQ4CDIKcwFINAYJEkSJMRkhBBJEMgpzAEgiEkQyDSlkEkSJMRkiEkQiwDA1ByPAHDUIJMAcNQmBA8AcNQo0BxY1BTQFvkxIRDQKNAW+SBJENAgrZBJENAkqZBJEMQA0CBJEMgpzAUg1CzQFvLElshA0CLIUIrIBMQA0B3AATEiyEjQHshE0CLIVs7EjshA0CrIHMgpzAUg0CwmyCCKyAbMoKGQjCWcoZCISQQAtsSOyEDQJsgcyCnMBSLIIIrIBNAiyCbMxFiMINQw0DDgYKWQSRDQMOBkhBBJEiSLAGoAIMDUxOGZkMTISQQAFiP6RI0MiwBqACDJjY2U2M2U1EkEABYj+nyNDIsAagAg2ZTg2MDg1YxJBAAWI/vMjQyLAGoAIYzI5MDJjYTASQQAFiP7yI0M=
	itxn_field ApprovalProgram

	// src_map:arc12.rb:143
	int NoOp
	itxn_field OnCompletion

	// src_map:arc12.rb:144
	load 0 // create_vault: receiver [account]
	itxn_field Accounts

	// src_map:arc12.rb:145
	txn Sender
	itxn_field Accounts

	// src_map:arc12.rb:146
	int 0
	itxn_field Fee

	// src_map:arc12.rb:148
	itxn_submit

	// src_map:arc12.rb:150
	// Fund vault with account MBR
	// src_map:arc12.rb:151
	itxn_begin

	// src_map:arc12.rb:152
	int pay
	itxn_field TypeEnum

	// src_map:arc12.rb:153
	txn CreatedApplicationID
	app_params_get AppAddress
	pop
	itxn_field Receiver

	// src_map:arc12.rb:154
	global MinBalance
	itxn_field Amount

	// src_map:arc12.rb:155
	int 0
	itxn_field Fee

	// src_map:arc12.rb:156
	itxn_submit

	// src_map:arc12.rb:158
	load 0 // create_vault: receiver [account]
	int 32
	box_create

	// src_map:arc12.rb:159
	load 0 // create_vault: receiver [account]
	txn CreatedApplicationID
	itob
	box_put

	// src_map:arc12.rb:161
	load 1 // create_vault: mbr_payment [pay]
	gtxns Amount
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	pop
	load 2 // pre_create_mbr
	-
	global MinBalance
	+
	==
	assert

	// src_map:arc12.rb:163
	txn CreatedApplicationID
	itob
	byte "151f7c75"
	concat
	log

	// src_map:arc12.rb:164
	retsub

verify_axfer: // verify_axfer(receiver, vault_axfer)
	txn OnCompletion
	int NoOp
	==
	assert

	int 1
	txnas Accounts
	store 3 // verify_axfer: receiver [account]

	txn GroupIndex
	int 1
	-
	store 4 // verify_axfer: vault_axfer [axfer]

	// src_map:arc12.rb:170
	load 3 // verify_axfer: receiver [account]
	box_get
	swap
	pop
	assert

	// src_map:arc12.rb:171
	load 4 // verify_axfer: vault_axfer [axfer]
	gtxns Receiver
	load 3 // verify_axfer: receiver [account]
	box_get
	pop
	==
	assert

	// src_map:arc12.rb:172
	load 4 // verify_axfer: vault_axfer [axfer]
	gtxns CloseRemainderTo
	global ZeroAddress
	==
	assert

	// src_map:arc12.rb:173
	retsub

get_vault_id: // get_vault_id(receiver)
	txn OnCompletion
	int NoOp
	==
	assert

	int 1
	txnas Accounts
	store 5 // get_vault_id: receiver [account]

	// src_map:arc12.rb:179
	load 5 // get_vault_id: receiver [account]
	box_get
	swap
	pop
	assert

	// src_map:arc12.rb:180
	load 5 // get_vault_id: receiver [account]
	box_get
	pop
	byte "151f7c75"
	concat
	log

	// src_map:arc12.rb:181
	retsub

get_vault_addr: // get_vault_addr(receiver)
	txn OnCompletion
	int NoOp
	==
	assert

	int 1
	txnas Accounts
	store 6 // get_vault_addr: receiver [account]

	// src_map:arc12.rb:187
	load 6 // get_vault_addr: receiver [account]
	box_get
	swap
	pop
	assert

	// src_map:arc12.rb:188
	load 6 // get_vault_addr: receiver [account]
	box_get
	pop
	btoi
	app_params_get AppAddress
	pop
	byte "151f7c75"
	concat
	log

	// src_map:arc12.rb:189
	retsub

delete_vault: // delete_vault(receiver, vault, creator)
	txn OnCompletion
	int NoOp
	==
	assert

	int 1
	txnas Accounts
	store 7 // delete_vault: receiver [account]

	int 0
	txnas Applications
	store 8 // delete_vault: vault [application]

	int 2
	txnas Accounts
	store 9 // delete_vault: creator [account]

	// src_map:arc12.rb:196
	load 7 // delete_vault: receiver [account]
	box_get
	swap
	pop
	assert

	// src_map:arc12.rb:197
	load 8 // delete_vault: vault [application]
	load 7 // delete_vault: receiver [account]
	box_get
	pop
	btoi
	==
	assert

	// src_map:arc12.rb:198
	load 8 // delete_vault: vault [application]
	byte "creator"
	app_global_get_ex
	pop
	store 10 // vault_creator

	// src_map:arc12.rb:199
	load 10 // vault_creator
	load 9 // delete_vault: creator [account]
	==
	assert

	// src_map:arc12.rb:201
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	pop
	store 11 // pre_delete_mbr

	// src_map:arc12.rb:203
	// Delete vault
	// src_map:arc12.rb:204
	itxn_begin

	// src_map:arc12.rb:205
	int appl
	itxn_field TypeEnum

	// src_map:arc12.rb:206
	load 7 // delete_vault: receiver [account]
	box_get
	pop
	btoi
	itxn_field ApplicationID

	// src_map:arc12.rb:207
	int DeleteApplication
	itxn_field OnCompletion

	// src_map:arc12.rb:208
	int 0
	itxn_field Fee

	// src_map:arc12.rb:209
	itxn_submit

	// src_map:arc12.rb:211
	// Send vault MBR to creator
	// src_map:arc12.rb:212
	itxn_begin

	// src_map:arc12.rb:213
	int pay
	itxn_field TypeEnum

	// src_map:arc12.rb:214
	load 10 // vault_creator
	itxn_field Receiver

	// src_map:arc12.rb:215
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	pop
	load 11 // pre_delete_mbr
	-
	itxn_field Amount

	// src_map:arc12.rb:216
	int 0
	itxn_field Fee

	// src_map:arc12.rb:217
	itxn_submit

	// src_map:arc12.rb:218
	retsub

main:
	int 0
	txnas ApplicationArgs
	byte "dc4a2cde"
	==
	bz abi_routing0

	callsub create_vault

	int 1
	return

abi_routing0:
	int 0
	txnas ApplicationArgs
	byte "e99f0c84"
	==
	bz abi_routing1

	callsub verify_axfer

	int 1
	return

abi_routing1:
	int 0
	txnas ApplicationArgs
	byte "ef7d7c77"
	==
	bz abi_routing2

	callsub get_vault_id

	int 1
	return

abi_routing2:
	int 0
	txnas ApplicationArgs
	byte "546d3c21"
	==
	bz abi_routing3

	callsub get_vault_addr

	int 1
	return

abi_routing3:
	int 0
	txnas ApplicationArgs
	byte "9e810f4b"
	==
	bz abi_routing4

	callsub delete_vault

	int 1
	return

abi_routing4: